/**
 * Represents the type of an account.
 * - 'asset': Assets are resources owned by the company.
 * - 'liability': Liabilities are obligations of the company.
 * - 'equity': Equity is the owners' claim on assets.
 * - 'revenue': Revenue is income generated from business activities.
 * - 'expense': Expenses are costs incurred in generating revenue.
 */
export type AccountType = 'asset' | 'liability' | 'equity' | 'revenue' | 'expense'

/**
 * Represents a financial account in the chart of accounts.
 */
export interface Account {
  /** The unique identifier for the account. */
  id: string
  /** The name of the account. */
  name: string
  /** The type of the account (e.g., asset, liability, revenue). */
  type: AccountType
  /** The ID of the parent account, if it's a sub-account. */
  parent_account_id?: string | null
  /** The ID of the user who owns this account (if applicable). */
  user_id?: string
  /** The numerical code assigned to the account. */
  code?: string | null
  /** The ID of the organization this account belongs to. */
  organization_id?: string
  /** The ID of the accounting period this account is associated with. */
  accounting_period_id?: string
  /** Indicates if the account is protected and cannot be deleted. */
  is_protected?: boolean
}

/**
 * Represents the type of an entry line in a journal entry.
 * - 'debit': Increases assets or expenses, decreases liabilities, equity, or revenue.
 * - 'credit': Decreases assets or expenses, increases liabilities, equity, or revenue.
 */
export type EntryType = 'debit' | 'credit'

/**
 * Represents a single line item within a journal entry.
 */
export interface EntryLine {
  /** The unique identifier for the entry line (optional, typically generated by the system). */
  id?: string
  /** The ID of the account affected by this entry line. */
  account_id: string
  /** The type of the entry (debit or credit). */
  type: EntryType
  /** The monetary amount of the entry line. */
  amount: number
  /** The ID of the product associated with this entry line (if applicable). */
  product_id?: string
  /** The quantity of the product (if applicable). */
  quantity?: number
  /** The unit cost of the product (if applicable). */
  unit_cost?: number
  /** The total gross value of the transaction (before taxes/discounts). */
  total_gross?: number
  /** The ICMS (Brazilian VAT) value for the transaction. */
  icms_value?: number
  /** The ICMS (Brazilian VAT) rate applied. */
  icms_rate?: number
  /** The total net value of the transaction (after taxes/discounts). */
  total_net?: number
  /** The debit amount for this entry line. */
  debit?: number
  /** The credit amount for this entry line. */
  credit?: number
  /** The ID of the organization this entry line belongs to. */
  organization_id?: string
  /** The ID of the accounting period this entry line belongs to. */
  accounting_period_id?: string
}

/**
 * Represents a complete journal entry, comprising multiple entry lines.
 */
export interface JournalEntry {
  /** The unique identifier for the journal entry. */
  id: string
  /** The date of the journal entry. */
  entry_date: string
  /** A description of the journal entry. */
  description: string
  /** An array of entry lines that make up this journal entry. */
  lines: EntryLine[]
  /** The ID of the user who created this journal entry. */
  user_id?: string
  /** The ID of the organization this journal entry belongs to. */
  organization_id?: string
  /** The ID of the accounting period this journal entry belongs to. */
  accounting_period_id?: string
}

/**
 * Represents a ledger account, summarizing debit and credit entries.
 */
export interface LedgerAccount {
  /** The ID of the account. */
  account_id: string
  /** The name of the account. */
  accountName: string
  /** The type of the account. */
  type: AccountType
  /** An array of debit amounts. */
  debitEntries: number[]
  /** An array of credit amounts. */
  creditEntries: number[]
  /** The total sum of all debit entries. */
  totalDebits: number
  /** The total sum of all credit entries. */
  totalCredits: number
  /** The net debit amount. */
  debits: number
  /** The net credit amount. */
  credits: number
  /** The final balance of the account. */
  finalBalance: number
}

/**
 * Represents an organization within the system.
 */
export interface Organization {
  /** The unique identifier for the organization. */
  id: string
  /** The name of the organization. */
  name: string
  /** The CNPJ of the organization. */
  cnpj?: string;
  /** The social reason (razao social) of the organization. */
  razao_social?: string;
  /** The UF (state) of the organization. */
  uf?: string;
  /** The municipality of the organization. */
  municipio?: string;
  /** The timestamp when the organization was created. */
  created_at?: string
  /** Indicates if this is a personal organization. */
  is_personal?: boolean
  /** Indicates if this organization is shared. */
  is_shared?: boolean
  /** The name of the user from whom this organization was shared. */
  shared_from_user_name?: string
}

/**
 * Represents a financial transaction, either payable or receivable.
 */
export interface FinancialTransaction {
  /** The unique identifier for the financial transaction. */
  id?: string;
  /** A description of the financial transaction. */
  description: string;
  /** The monetary amount of the financial transaction. */
  amount: number;
  /** The due date of the financial transaction. */
  due_date: string;
  /** The date the financial transaction was paid (if applicable). */
  paid_date?: string | null;
  /** Indicates if the financial transaction has been paid. */
  is_paid?: boolean;
  /** The date the financial transaction was received (if applicable). */
  received_date?: string | null;
  /** Indicates if the financial transaction has been received. */
  is_received?: boolean;
  /** The ID of the organization this financial transaction belongs to. */
  organization_id?: string;
  /** The ID of the accounting period this financial transaction belongs to. */
  accounting_period_id?: string;
}

/**
 * Represents tax rate settings for an organization.
 */
export interface TaxSetting {
  id: string;
  organization_id: string;
  effective_date: string;
  icms_rate: number;
  ipi_rate: number;
  pis_rate: number;
  cofins_rate: number;
  mva_rate: number;
  created_at?: string;
  updated_at?: string;
}

/**
 * Represents the tax regime of an organization.
 */
export enum TaxRegime {
  SimplesNacional = 'simples_nacional',
  LucroPresumido = 'lucro_presumido',
  LucroReal = 'lucro_real',
}

/**
 * Represents the historical tax regime of an organization for a specific period.
 */
export interface TaxRegimeHistory {
  id: string;
  organization_id: string;
  regime: TaxRegime;
  start_date: string;
  end_date: string;
  created_at?: string;
  updated_at?: string;
}